// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Provisioning.Service.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// X509 certificate info.
    /// </summary>
    public partial class X509CertificateInfo
    {
        /// <summary>
        /// Initializes a new instance of the X509CertificateInfo class.
        /// </summary>
        public X509CertificateInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the X509CertificateInfo class.
        /// </summary>
        public X509CertificateInfo(string subjectName, string sha1Thumbprint, string sha256Thumbprint, string issuerName, System.DateTime notBeforeUtc, System.DateTime notAfterUtc, string serialNumber, int version)
        {
            SubjectName = subjectName;
            Sha1Thumbprint = sha1Thumbprint;
            Sha256Thumbprint = sha256Thumbprint;
            IssuerName = issuerName;
            NotBeforeUtc = notBeforeUtc;
            NotAfterUtc = notAfterUtc;
            SerialNumber = serialNumber;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subjectName")]
        public string SubjectName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sha1Thumbprint")]
        public string Sha1Thumbprint { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sha256Thumbprint")]
        public string Sha256Thumbprint { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "issuerName")]
        public string IssuerName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notBeforeUtc")]
        public System.DateTime NotBeforeUtc { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notAfterUtc")]
        public System.DateTime NotAfterUtc { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "serialNumber")]
        public string SerialNumber { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int Version { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
