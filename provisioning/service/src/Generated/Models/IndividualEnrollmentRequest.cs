// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Provisioning.Service.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The device enrollment record.
    /// </summary>
    public partial class IndividualEnrollmentRequest
    {
        /// <summary>
        /// Initializes a new instance of the IndividualEnrollmentRequest
        /// class.
        /// </summary>
        public IndividualEnrollmentRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IndividualEnrollmentRequest
        /// class.
        /// </summary>
        /// <param name="registrationId">The registration ID is alphanumeric,
        /// lowercase, and may contain hyphens.</param>
        /// <param name="attestation">Attestation method used by the
        /// device.</param>
        /// <param name="capabilities">Capabilities of the device</param>
        /// <param name="deviceId">Desired IoT Hub device ID
        /// (optional).</param>
        /// <param name="registrationState">Current registration
        /// status.</param>
        /// <param name="iotHubHostName">The Iot Hub host name.</param>
        /// <param name="initialTwin">Initial device twin.</param>
        /// <param name="provisioningStatus">The provisioning status. Possible
        /// values include: 'enabled', 'disabled'</param>
        /// <param name="reprovisionPolicy">The behavior when a device is
        /// re-provisioned to an IoT hub.</param>
        /// <param name="allocationPolicy">The allocation policy of this
        /// resource. This policy overrides the tenant level allocation policy
        /// for this individual enrollment or enrollment group. Possible values
        /// include 'hashed': Linked IoT hubs are equally likely to have
        /// devices provisioned to them, 'geoLatency':  Devices are provisioned
        /// to an IoT hub with the lowest latency to the device.If multiple
        /// linked IoT hubs would provide the same lowest latency, the
        /// provisioning service hashes devices across those hubs, 'static' :
        /// Specification of the desired IoT hub in the enrollment list takes
        /// priority over the service-level allocation policy, 'custom':
        /// Devices are provisioned to an IoT hub based on your own custom
        /// logic. The provisioning service passes information about the device
        /// to the logic, and the logic returns the desired IoT hub as well as
        /// the desired initial configuration. We recommend using Azure
        /// Functions to host your logic. Possible values include: 'hashed',
        /// 'geoLatency', 'static', 'custom'</param>
        /// <param name="iotHubs">The list of names of IoT hubs the device(s)
        /// in this resource can be allocated to. Must be a subset of tenant
        /// level list of IoT hubs.</param>
        /// <param name="customAllocationDefinition">Custom allocation
        /// definition.</param>
        public IndividualEnrollmentRequest(string registrationId, AttestationMechanismRequest attestation, DeviceCapabilities capabilities = default(DeviceCapabilities), string deviceId = default(string), DeviceRegistrationState registrationState = default(DeviceRegistrationState), string iotHubHostName = default(string), InitialTwin initialTwin = default(InitialTwin), string provisioningStatus = default(string), ReprovisionPolicy reprovisionPolicy = default(ReprovisionPolicy), string allocationPolicy = default(string), IList<string> iotHubs = default(IList<string>), CustomAllocationDefinition customAllocationDefinition = default(CustomAllocationDefinition))
        {
            Capabilities = capabilities;
            RegistrationId = registrationId;
            DeviceId = deviceId;
            RegistrationState = registrationState;
            Attestation = attestation;
            IotHubHostName = iotHubHostName;
            InitialTwin = initialTwin;
            ProvisioningStatus = provisioningStatus;
            ReprovisionPolicy = reprovisionPolicy;
            AllocationPolicy = allocationPolicy;
            IotHubs = iotHubs;
            CustomAllocationDefinition = customAllocationDefinition;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets capabilities of the device
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public DeviceCapabilities Capabilities { get; set; }

        /// <summary>
        /// Gets or sets the registration ID is alphanumeric, lowercase, and
        /// may contain hyphens.
        /// </summary>
        [JsonProperty(PropertyName = "registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets desired IoT Hub device ID (optional).
        /// </summary>
        [JsonProperty(PropertyName = "deviceId")]
        public string DeviceId { get; set; }

        /// <summary>
        /// Gets current registration status.
        /// </summary>
        [JsonProperty(PropertyName = "registrationState")]
        public DeviceRegistrationState RegistrationState { get; private set; }

        /// <summary>
        /// Gets or sets attestation method used by the device.
        /// </summary>
        [JsonProperty(PropertyName = "attestation")]
        public AttestationMechanismRequest Attestation { get; set; }

        /// <summary>
        /// Gets or sets the Iot Hub host name.
        /// </summary>
        [JsonProperty(PropertyName = "iotHubHostName")]
        public string IotHubHostName { get; set; }

        /// <summary>
        /// Gets or sets initial device twin.
        /// </summary>
        [JsonProperty(PropertyName = "initialTwin")]
        public InitialTwin InitialTwin { get; set; }

        /// <summary>
        /// Gets or sets the provisioning status. Possible values include:
        /// 'enabled', 'disabled'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningStatus")]
        public string ProvisioningStatus { get; set; }

        /// <summary>
        /// Gets or sets the behavior when a device is re-provisioned to an IoT
        /// hub.
        /// </summary>
        [JsonProperty(PropertyName = "reprovisionPolicy")]
        public ReprovisionPolicy ReprovisionPolicy { get; set; }

        /// <summary>
        /// Gets or sets the allocation policy of this resource. This policy
        /// overrides the tenant level allocation policy for this individual
        /// enrollment or enrollment group. Possible values include 'hashed':
        /// Linked IoT hubs are equally likely to have devices provisioned to
        /// them, 'geoLatency':  Devices are provisioned to an IoT hub with the
        /// lowest latency to the device.If multiple linked IoT hubs would
        /// provide the same lowest latency, the provisioning service hashes
        /// devices across those hubs, 'static' : Specification of the desired
        /// IoT hub in the enrollment list takes priority over the
        /// service-level allocation policy, 'custom': Devices are provisioned
        /// to an IoT hub based on your own custom logic. The provisioning
        /// service passes information about the device to the logic, and the
        /// logic returns the desired IoT hub as well as the desired initial
        /// configuration. We recommend using Azure Functions to host your
        /// logic. Possible values include: 'hashed', 'geoLatency', 'static',
        /// 'custom'
        /// </summary>
        [JsonProperty(PropertyName = "allocationPolicy")]
        public string AllocationPolicy { get; set; }

        /// <summary>
        /// Gets or sets the list of names of IoT hubs the device(s) in this
        /// resource can be allocated to. Must be a subset of tenant level list
        /// of IoT hubs.
        /// </summary>
        [JsonProperty(PropertyName = "iotHubs")]
        public IList<string> IotHubs { get; set; }

        /// <summary>
        /// Gets or sets custom allocation definition.
        /// </summary>
        [JsonProperty(PropertyName = "customAllocationDefinition")]
        public CustomAllocationDefinition CustomAllocationDefinition { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RegistrationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RegistrationId");
            }
            if (Attestation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Attestation");
            }
            if (Capabilities != null)
            {
                Capabilities.Validate();
            }
            if (Attestation != null)
            {
                Attestation.Validate();
            }
            if (ReprovisionPolicy != null)
            {
                ReprovisionPolicy.Validate();
            }
            if (CustomAllocationDefinition != null)
            {
                CustomAllocationDefinition.Validate();
            }
        }
    }
}
